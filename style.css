:root {
    --font: "Roboto", system-ui, sans-serif;
}

html, body {
    padding: 0;
    margin: 0;
    height: 100%;
    overflow: hidden;
}

body {
    background: #101010;
    color: #ffffff;
    font-family: var(--font);
    position: relative;
}

body {
    --hue-rotate: 0deg;
    filter: hue-rotate(var(--hue-rotate));
}

/* #region background */
#background[hidden] {
    display: block;
    top: -100%;
}

#background {
    position: absolute;
    z-index: -1;
    --size: min(250vh, max(200vw, 100vh));

    width: var(--size);
    height: var(--size);
    top: 50%;
    left: calc(var(--size) / -3);

    transition: top 3s cubic-bezier(0, .5, .2, 1);

    background-image: url("assets/logos/skapclient.svg");
    background-repeat: no-repeat;
    background-size: var(--size);
    opacity: 0.5;

    animation-name: spin;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    animation-duration: 120s;
}

@keyframes spin {
    from {
        transform: translateY(-50%) rotate(0turn);
    }

    to {
        transform: translateY(-50%) rotate(1turn);
    }
}

/* #endregion */

/* #region screens */
.screen {
    width: 100vw;
    height: 100vh;
    position: absolute;
    top: 0;
    left: -100vw;

    --time: .5s;
}

.screen[hidden] {
    display: none !important;
}

.screen.active {
    left: 0vw;
}

.screen.inactive {
    left: 200vw;
}

.screen.inactive.initial {
    display: none !important;
}

.screen.active.right {
    animation: slideinright var(--time) ease-in-out 0s 1 normal forwards;
}

.screen.active.left {
    animation: slideinleft var(--time) ease-in-out 0s 1 normal forwards;
}

.screen.inactive.right {
    animation: slideoutright var(--time) ease-in-out 0s 1 normal forwards;
}

.screen.inactive.left {
    animation: slideoutleft var(--time) ease-in-out 0s 1 normal forwards;
}

.screen.initial {
    animation-duration: 0s;
}

@keyframes slideinright {
    from {
        left: -100vw;
    }

    to {
        left: 0vw;
    }
}

@keyframes slideinleft {
    from {
        left: 100vw;
    }

    to {
        left: 0vw;
    }
}

@keyframes slideoutright {
    from {
        left: 0vw;
    }

    to {
        left: 100vw;
    }
}

@keyframes slideoutleft {
    from {
        left: 0vw;
    }

    to {
        left: -100vw;
    }
}

/* #endregion */

/* #region loading screen */
#loadingScreen {
    display: flex;
    flex-direction: column;
    justify-content: center;
    place-items: center;
}

#loading {
    margin-bottom: 0;
}

#loadingBar {
    width: min(75vw, 40em);
    height: 2em;

    appearance: none;

    border: .2em solid white;
    margin: .5em 0;
}

#loadingBar::-webkit-progress-bar {
    background: transparent;
}

#loadingBar::-webkit-progress-value {
    background: #4040ff;
}

#skipLoading {
    position: absolute;
    top: .5em;
    left: .5em;
    padding: .5em 1em;

    background: transparent;
    border: none;
    color: transparent;
}

#skipLoading:focus {
    color: white;
    border: .1em solid white;
    cursor: pointer;
}

/* #endregion */

/* #region title screen */
#titleScreen {
    display: flex;
    flex-direction: column;
    justify-content: center;
    place-items: center;
}

#title {
    position: relative;
    background-image: linear-gradient(to bottom, #ff4040, #ff4040 57.5%, #d050d0, #6060ff 57.5%);
    background-clip: text;
    -webkit-background-clip: text;
    -moz-background-clip: text;
    color: transparent;
    user-select: none;
    margin: .1em;
    font-family: "Righteous", sans-serif;
    font-size: 7em;
}

#title.devMode::after {
    content: "dev";
    display: block;
    position: absolute;

    color: lime;
    font-size: 4rem;
    font-family: monospace;

    bottom: -0.25em;
    right: -0.5em;
}

#subtitle {
    font-size: 1em;
    margin: .1em 0 .5em 0;
}

#subtitle a {
    color: #2080ff;
}

/* #region Login Menu */
#loginForm {
    display: grid;
    grid-template-areas:
        "u u"
        "p p"
        "m m"
        "l r"
        "g g"
        "rm rm";
    grid-template-columns: 1fr 1fr;
    place-items: center;
}

#loginForm[hidden] {
    display: none;
}

#loginForm label {
    display: inline-block;
    font-size: 1.5em;
    text-align: right;
}

#loginForm button, #logoutDiv button {
    display: block;
    margin: .2em 0;
    padding: .2em;
    width: calc(100% - .4em);
    min-width: fit-content;
    background: none;
    border: .1em solid #ffffff;
    cursor: pointer;
    font-family: var(--font);
    font-size: 1.5em;
    color: #ffffff;
    border-radius: .2em;
}

#loginForm label[for=username] {
    grid-area: u;
}

#loginForm label[for=password] {
    grid-area: p;
}

#loginForm input {
    background: none;
    border: none;
    border-bottom: .1em solid #ffffff;
    margin-bottom: .1em;
    margin-left: .3em;
    font-family: var(--font);
    font-size: 1em;
    color: #ffffff;
}

#loginMsg1 {
    grid-area: m;
    margin: .2em 0;
    text-align: center;
    color: #808080;
}

#loginForm button:active {
    border-color: #808080;
}

#loginBtn {
    grid-area: l;
}

#registerBtn {
    grid-area: r;
}

#guestBtn {
    grid-area: g;
}

#recaptchaMsg {
    grid-area: rm;
    font-size: .6em;
}

#recaptchaMsg a {
    color: #2080ff;
}

/* #endregion */
/* #region Logout Menu */
#logoutDiv {
    display: grid;
    grid-template-areas:
        "m m"
        "r r"
        "g c"
        "l l";
    grid-template-columns: 1fr 1fr;
    place-items: center;
    min-width: fit-content;
    width: 25em;
}

#logoutDiv[hidden] {
    display: none;
}

#loginMsg2 {
    grid-area: m;
    margin: 0 0 .5em 0;
    color: #808080;
    text-align: center;
}

#changingRoomBtn {
    grid-area: r;
}

#logoutBtn {
    grid-area: l;
}

/* #endregion */
/* #endregion */

/* #region create game */
#createGameMenu {
    display: flex;
    justify-content: center;
    place-items: center;
    flex-direction: column;

    font-size: 1.5em;
}
#createGameMenu h2 {
    margin: .2em;
}
#createGameMenu input[type=text] {
    background: none;
    border: .1em solid transparent;
    border-bottom: .1em solid #ffffff;
    padding: .2em;
    margin: .5em 0;
    font-family: var(--font);
    font-size: 1em;
    width: 20em;
    max-width: 75%;
    color: #ffffff;
}
#createGameMenu input[type=text]:focus {
    outline: none;
    border: .1em solid #ffffff;
}

label[for="createGameFile"] {
    background: #00000080;
    padding: .5em 1em;
    cursor: pointer;
}
label[for="createGameFile"]:has([disabled]) {
    background: #80808080;
    cursor: default;
}
#createGameFile {
    display: none;
}
#createGameBtn {
    display: block;
    margin: 1em 0;
    padding: .5em .75em;
    min-width: fit-content;
    background: none;
    border: .1em solid #ffffff;
    cursor: pointer;
    font-family: var(--font);
    font-size: 1em;
    color: #ffffff;
    border-radius: .2em;
}
#createGameBtn[disabled] {
    background: #80808080;
    cursor: default;
}

/* #endregion */

/* #region changing room */
#changingRoom {
    display: flex;
    justify-content: center;
    place-items: center;
}

#playerPreview {
    position: relative;
}

#playerBody {
    background: none;
    border: none;
    border-radius: 50%;

    cursor: pointer;

    width: fit-content;
    height: fit-content;

    --border: 0, 0, 0;
}

#playerBody::-webkit-color-swatch {
    width: 6em;
    height: 6em;
    border: .5em solid rgb(var(--border));
    border-radius: 50%;
}

#playerHat {
    position: absolute;
    left: 0;
    top: 0;
}

/* #endregion */

/* #region game list */
#gameList {
    position: relative;
    height: 100vh;
    width: 100vw;
    box-sizing: border-box;
    margin: 0;
    padding: 3em 3em;
    overflow-y: auto;
}

#gameList::-webkit-scrollbar {
    display: none;
}

/* #region custom game */
.customGame {
    margin: .25em 0;
    padding: 1em 0 1em 5em;
    position: relative;
    cursor: pointer;
    width: 100%;
    color: white;
    text-align: left;
    border: none;

    --color: #2080ff;

    background-position-x: 250%;
    background-repeat: no-repeat;
    background-size: 125%;
    background-image: linear-gradient(to right, 
        var(--color) calc(2em + 50%), 
        transparent calc(2em + 50%)
    );
    background-color: #202020c0;
    transition: 
        background-color .5s, 
        background-position-x .5s;
    
    border-radius: .2em .4em .4em .2em;

    font-family: var(--font);
}

.customGame:hover {
    background-position-x: 249%;
    background-color: color-mix(in srgb, var(--color) 20%, #202020c0);
}

.customGame.private {
    --color: #ff0000;
}

.customGame.private .cgName::before {
    content: "ðŸ”’ ";
}

.cgName {
    display: block;
    margin: 0 0 .2em 0;
    font-size: 2em;
}

.cgPlayers {
    display: inline-block;
    width: 10em;
    min-width: fit-content;
}

.cgUUID {
    display: inline-block;
    width: 27em;
}

.cgUUID,
.cgPassword {
    font-family: monospace;
    font-size: 1em;
    color: #00ff00;
}

/* #endregion */

.cornerBtn {
    background: none;
    border: none;
    cursor: pointer;
    position: absolute;
    width: 4em;
    height: 4em;
    padding: 0;
}

.cornerBtn.left {
    left: 0;
}

.cornerBtn.right {
    right: 0;
}

.cornerBtn.top {
    top: 0;
}

.cornerBtn.bottom {
    bottom: 0;
}

.cornerBtn::before {
    display: block;
    position: absolute;
    top: .35em;
    font-size: 2em;
    color: white;
}

.cornerBtn.back::before {
    content: "\21e6";
    left: .5em;
}

.cornerBtn.refresh::before {
    right: .5em;
    content: "\27f3";
}

/* #endregion */

/* #region game */
#HUD {
    z-index: 999;
}

#canvas {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
}

/* #region playerList */
#playerList {
    list-style: none;
    overflow-y: auto;
    position: absolute;
    inset: .5em auto auto .5em;
    margin: 0;
    padding: .3em 0 .3em .7em;
    width: min(19em, 25%);
    height: 14em;
    background: #000000c0;
    border: .1em solid white;
    border-radius: .2em .2em .5em .2em;

    user-select: none;

    --deadColor: #ff0000;
    --frozenColor: #7cabd2;
    --deadfrozenColor: #c040c0;
}

#playerList::-webkit-scrollbar {
    display: none;
}

.playerLI {
    color: white;
}

.playerLI.dead {
    color: var(--deadColor);
}

.playerLI.frozen {
    color: var(--frozenColor);
}

.playerLI.dead.frozen {
    color: var(--deadfrozenColor);
}

/* #endregion playerList */

/* #region chat */
#chatWrapper {
    pointer-events: all;
    position: absolute;
    height: 19em;
    width: min(30em, 30%);
    inset: auto auto .5em .5em;
    padding: 0 0 .2em .2em;
    display: grid;
    grid-template-areas:
        "_ _"
        "c c"
        "i b";
    grid-template-rows: auto auto 2em;
    grid-template-columns: auto 2em;
    flex-direction: column;
    background: #000000c0;
    border: .1em solid white;
    border-top: none;
    border-radius: 0 0 .2em .2em;

    mask-image: linear-gradient(to top, 
        rgba(255, 255, 255, 1) 75%,
        rgba(255, 255, 255, 0.98876953125) 76.5625%,
        rgba(255, 255, 255, 0.95703125) 78.125%,
        rgba(255, 255, 255, 0.90771484375) 79.6875%,
        rgba(255, 255, 255, 0.84375) 81.25%,
        rgba(255, 255, 255, 0.76806640625) 82.8125%,
        rgba(255, 255, 255, 0.68359375) 84.375%,
        rgba(255, 255, 255, 0.59326171875) 85.9375%,
        rgba(255, 255, 255, 0.5) 87.5%,
        rgba(255, 255, 255, 0.40673828125) 89.0625%,
        rgba(255, 255, 255, 0.31640625) 90.625%,
        rgba(255, 255, 255, 0.23193359375) 92.1875%,
        rgba(255, 255, 255, 0.15625) 93.75%,
        rgba(255, 255, 255, 0.09228515625) 95.3125%,
        rgba(255, 255, 255, 0.04296875) 96.875%,
        rgba(255, 255, 255, 0.01123046875) 98.4375%,
        rgba(255, 255, 255, 0) 100%
    );
}

#chatDiv {
    grid-area: c;
    align-self: self-end;
    height: fit-content;
    max-height: 16em;
    padding: .5em 0 .1em .5em;
    overflow-y: scroll;
}
#chatDiv > :first-child {
    margin-top: 3em;
}

#chatDiv::-webkit-scrollbar {
    display: none;
}

#chatInput {
    padding-left: .4em;
    box-sizing: border-box;
    height: 2em;
    min-width: 0;
    grid-area: i;
    background: none;
    border: .1em solid #808080;
    color: #ffffff;
    font-size: 1em;
    font-family: var(--font);
}

#charsLeft {
    font-size: 1em;
    font-family: monospace;
    font-weight: bold;

    position: absolute;
    right: 2.2rem;
    bottom: .3rem;
    padding: .2em;

    color: #808080;
    background: #000000c0;
}

#charsLeft[data-chars^="-"] {
    color: #ff0000;
}

#chatWrapper:has(#chatInput:focus) #charsLeft::after {
    content: attr(data-chars);
}

#chatSendBtn {
    grid-area: b;
    font-size: 1em;
    width: 2em;
    height: 2em;
    padding: 0;
    background: none;
    border: none;
    color: white;
    cursor: pointer;
}

.chatMsg {
    margin: 0 0 .5em 0;
    line-height: 1;
}

.chatMsg .author {
    margin-right: .5em;
}

/* Discord */
.chatMsg[data-level="-2"] {
    color: #5e3dff;
    font-weight: bold;
}

/* Guest */
.chatMsg[data-level="-1"] {
    color: #808080;
}

/* Player */
.chatMsg[data-level="0"] {
    color: #e0e0e0;
}

/* Mod */
.chatMsg[data-level="1"] .author {
    font-weight: bold;
    background-size: 20em 100%;
    background-image: repeating-linear-gradient(to right, #ff4040, #ffff40, #40ff40, #40ffff, #4040ff, #ff40ff, #ff4040);
    background-clip: text;
    -webkit-background-clip: text;
    -moz-background-clip: text;
    color: transparent;
    animation: slide 5s linear infinite;
}

.chatMsg:where(
    [data-author="SkapClientAdmin"]
) .author {
    font-weight: bold;
    background-size: 20em 100%;
    background-image: repeating-linear-gradient(to right, #2080ff, #20c080, #2080ff);
    background-clip: text;
    -webkit-background-clip: text;
    -moz-background-clip: text;
    color: transparent;
    animation: slide 5s linear infinite;
}
.chatMsg[data-author^="["][data-author$="]"] :where(.author, .message) {
    color: #ffc080 !important;
    background: none !important;
}

.chatMsg .clearedChatMsg {
    color: #808080;
    font-style: italic;
}

@keyframes slide {
    from {
        background-position-x: 0%;
    }

    to {
        background-position-x: -20em;
    }
}

/* #endregion */

/* #region fuel */
#fuelBar {
    position: absolute;
    height: 2em;
    inset: auto calc(1em + min(30em, 30%)) 1em calc(1em + min(30em, 30%));
    border: .5em solid black;

    
    --fuel: 10;
    --prevFuel: 10;
    
    --fuelColor: #ffe000;
    --usageColor: #ff6400;
    --replenishColor: #64ff00;

    --fuelPercent: calc(var(--fuel) * 10%);
    --prevFuelPercent: calc(var(--prevFuel) * 10%);

    background-image: linear-gradient(to right,
        transparent var(--prevFuelPercent),
        var(--replenishColor) var(--prevFuelPercent),
        var(--replenishColor) var(--fuelPercent),
        transparent var(--fuelPercent)
    ), linear-gradient(to right,
        var(--fuelColor) var(--fuelPercent),
        transparent var(--fuelPercent)
    ), linear-gradient(to right,
        var(--usageColor) var(--prevFuelPercent),
        transparent var(--prevFuelPercent)
    );
}
/* #endregion */

/* #region powers */
#powers {
    position: absolute;
    right: .5em;
    top: 50%;
    transform: translate(0, -50%);

    display: flex;
    flex-direction: column;
    gap: .75em;

    padding: .25em;
    border-radius: 1em;
}

#powers:has(.powerSlot[data-power="2"]):has(.powerSlot[data-power="4"]) {
    /* Combo */
    background: #2080ff80;
}

.powerWrapper {
    position: relative;
    box-sizing: content-box;
}

.powerWrapper[data-disabled="1"] .powerSlot {
    filter: brightness(1.2) saturate(0.25) contrast(0.25);
}

.powerSlot {
    width: 3em;
    height: 3em;
    border-radius: 25%;
    position: relative;

    box-sizing: border-box;

    border: .1em solid #202020;
    background-color: #404040;

    overflow: hidden;
}

.powerSlot::after {
    content: "";
    display: block;
    width: 100%;
    height: 100%;

    background-image:
        linear-gradient(to top, #ff1000a0, #ff1000a0 calc(var(--cooldown) * 100%), transparent calc(var(--cooldown) * 100%)),
        linear-gradient(to top, #0010ffa0, #0010ffa0 calc(var(--heat) * 100%), transparent calc(var(--heat) * 100%));
}

.powerSlot::before {
    --active: clamp(0, 1 - 100000 * var(--cooldown), 1);
    transition: filter calc(0.25s * var(--active));
    filter: 
        saturate(calc(var(--active) * 75% + 25%)) 
        brightness(calc(var(--active) * 20% + 80%)) 
        contrast(calc(var(--active) * 50% + 50%));
}

.powerClipping {
    position: absolute;
    width: 100%;
    height: 100%;

    clip-path: polygon(-10000% 0%, 50% 0%, 50% 100%, -10000% 100%);
}

.powerTray {
    position: absolute;
    margin: 0;
    padding: 0;

    left: 0%;
    top: 5%;
    transform: translate(1em, 0);

    width: fit-content;
    height: 90%;

    list-style: none;

    display: flex;
    flex-direction: row;

    transition: transform .2s;
}

.powerTray::before {
    content: "";

    position: absolute;
    left: 100%;
    top: 0;

    width: 2em;
    height: 100%;
    background: #303030;
}

.powerItem:first-child {
    border-radius: .5em 0 0 .5em;
    overflow: hidden;
}

.powerWrapper[data-disabled="1"] .powerTray {
    transform: none !important;
}

.powerWrapper:where(:hover, :focus) .powerTray {
    transform: translate(-100%, 0);
}

.powerItem {
    position: relative;
    width: 2.7em;
    height: 2.7em;

    background-color: #303030;
    border-right: .05em solid #505050;

    cursor: pointer;
}

.powerItem:hover {
    background-color: #285898;
}

[data-power]::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    background-position: center;
    background-size: 80%;
    background-repeat: no-repeat;
}

[data-power="0"]::before {
    background-image: url("https://skap.io/textures/powers/shrinker.svg");
}

[data-power="1"]::before {
    background-image: url("https://skap.io/textures/powers/explosion.svg");
}

[data-power="2"]::before {
    background-image: url("https://skap.io/textures/powers/wall.svg");
}

[data-power="3"]::before {
    background-image: url("https://skap.io/textures/powers/meteor.svg");
}

[data-power="4"]::before {
    background-image: url("https://skap.io/textures/powers/refuel.svg");
}

[data-power="5"]::before {
    background-image: url("https://skap.io/textures/powers/feather.svg");
}

[data-power="6"]::before {
    background-image: url("https://skap.io/textures/powers/shield.svg");
}

[data-power="7"]::before {
    background-image: url("https://skap.io/textures/powers/dash.svg");
}

[data-power="8"]::before {
    background-image: url("https://skap.io/textures/powers/lantern.svg");
}

[data-power="9"]::before {
    background-image: url("https://skap.io/textures/powers/ghost.svg");
}

[data-power="10"]::before {
    background-image: url("https://skap.io/textures/powers/frost.svg");
}

[data-power="11"]::before {
    background-image: url("https://skap.io/textures/powers/shell.svg");
}

[data-power="12"]::before {
    background-image: url("./assets/entities/blueFrisbeeEntity.svg");
    background-size: 70%;
}

[data-power="13"]::before {
    background-image: url("./assets/entities/redFrisbeeEntity.svg");
    background-size: 70%;
}

/* #endregion */

/* #region debug */
#debug {
    position: absolute;
    inset: auto .5em .5em auto;
    padding: .5em;

    display: grid;
    grid-template-columns: auto auto 5em auto 4.5em auto 4em;
    gap: .4em .2em;

    background: #000000c0;
    border: .2em solid white;
    border-radius: .5em .2em .2em .2em;

    font-size: .75em;
    font-family: monospace;
}

.label {
    text-align: right;
    margin-left: .5em;
}

#mspfMean::after, #mspfStdDev::after,
#msptMean::after, #msptStdDev::after {
    content: "ms";
    margin-left: .3em;
}

#wsReceive::after, #wsSend::after {
    content: "B/s";
    margin-left: .3em;
}

/* #endregion */

/* #endregion game */

/* #region settings */

/* #region settings btn */
#settingsBtn {
    all: unset;
    position: absolute;
    inset: .5em .5em auto auto;
    width: 2em;
    height: 2em;
    border-radius: .25em;
    background: #00000080;
    display: grid;
    place-content: center;
    cursor: pointer;
}
#settingsBtn::after {
    content: "âš™";
    display: block;
    font-size: 1.5em;
    line-height: 1em;
    text-align: center;
    inset: 0;
}
#settingsBtn:focus {
    outline: 1px solid white;
}
/* #endregion */

#settings {
    box-sizing: border-box;
    position: absolute;
    width: 100%;
    height: 100%;
    padding: 1em 5em;
    background-color: #202020e0;

    overflow-y: scroll;
}

/* #region control */
.control {
    display: grid;
    width: fit-content;
    grid-template-areas: "name name" "triggers addBtn";
    place-items: center;
    gap: .1em .5em;
    margin-bottom: .2em;
}

.controlName {
    margin: 0.1em 0;
    justify-self: start;
}

.triggersWrapper {
    display: flex;
    max-width: 75vw;
    width: fit-content;
    flex-wrap: wrap;
    grid-area: triggers;
}
.triggersWrapper:empty::before {
    content: "<no keys assigned>";
    color: #808080;
    font-family: monospace;
    font-style: italic;
    font-size: small;
}

.addTriggerBtn {
    all: unset;
    display: grid;
    width: 1.25em;
    height: 1.25em;
    cursor: pointer;
    border: 1px solid white;
    border-radius: .2em;
    place-items: center;
    grid-area: addBtn;
}
.addTriggerBtn:hover {
    background: #ffffff20;
}
.addTriggerBtn:focus {
    outline: 2px solid #2080ff;
}
.addTriggerBtn::after {
    content: "+";
    line-height: 1;
}
/* #endregion */

/* #region trigger */
.triggerWrapper {
    display: grid;
    grid-template-areas: "remove trigger ctrl shift alt meta";
    background: #202020c0;
    padding: .25em;
    margin: .1em;
    width: max-content;
    height: 1.25em;
    border-radius: .5em;
    border: 1px solid white;
}
.triggerWrapper * {
    box-sizing: border-box;
}

.deleteTriggerBtn {
    all: unset;
    box-sizing: border-box;
    display: grid;
    width: 1.25em;
    height: 1.25em;
    cursor: pointer;
    border: 1px solid white;
    border-radius: .2em;
    place-items: center;
}
.deleteTriggerBtn:focus {
    outline: 2px solid #2080ff;
}
.deleteTriggerBtn:hover {
    background: #ffffff20;
}
.deleteTriggerBtn::after {
    content: "-";
    line-height: 1;
}

.trigger {
    display: grid;
    box-sizing: border-box;
    grid-template-columns: repeat(5, min-content);
    min-width: 10em;
    padding: 0 .5em;
    border-right: 1px solid #ffffff80;
    margin-right: .2em;
    height: 1.25em;
    line-height: 1.25;
}

.modifierKey, .triggerKey {
    width: fit-content;
    position: relative;
    padding: .1em .25em;
    border: 1px solid white;
    border-radius: .2em;
    color: white;
}
.triggerKey {
    display: block;
    cursor: pointer;
    background: #ffffff20;
}
.triggerKey::after { content: attr(data-trigger); }
.triggerKey:hover {
    background: #ffffff40;
}
.triggerKey:focus {
    outline: 2px solid #2080ff;
}

.modifierKey.ctrl::before { content: "Ctrl"; }
.modifierKey.shift::before { content: "Shift"; }
.modifierKey.alt::before { content: "Alt"; }
.modifierKey.meta::before { content: "Meta"; }
.modifierKey.plus { 
    margin-right: 1.25em; 
    background: #00ff0040;
}
.modifierKey.minus { 
    margin-left: 1.25em; 
    background: #ff000040;
}
.modifierKey.plus::after {
    content: "+";
    position: absolute;
    left: 100%;
    width: 1.5em;
    text-align: center;
}
.modifierKey.minus::after {
    content: "-";
    position: absolute;
    right: 100%;
    width: 1.5em;
    text-align: center;
}

.modifierKey { display: none; }
.modifierKey[data-value="1"].plus { display: block; }
.modifierKey[data-value="-1"].minus { display: block; }


.modifierBtn {
    all: unset;
    cursor: pointer;
    display: inline-block;
    height: 1.25em;
    width: 1.25em;
}
.modifierBtn:hover, .modifierBtn:focus {
    background-color: #ffffff20;
}
.modifierBtn:focus {
    outline: 2px solid #2080ff;
}
.modifierBtn::before {
    content: "";
    display: inline-block;
    width: 1.25em;
    height: 1.25em;
    background-size: 100%;
}
.modifierBtn[data-value="1"]::before {
    background-image: url("./assets/icons/tick.svg");
}
.modifierBtn[data-value="0"]::before {
    background-image: url("./assets/icons/slash.svg");
}
.modifierBtn[data-value="-1"]::before {
    background-image: url("./assets/icons/cross.svg");
}
/* #endregion */

/* #region trigger modal */
#controlOverlay {
    max-width: 30em;
}
#controlOverlay::backdrop {
    background: #c0c0c080;
}
/* #endregion */

/* #endregion */

.grecaptcha-badge {
    visibility: hidden;
}